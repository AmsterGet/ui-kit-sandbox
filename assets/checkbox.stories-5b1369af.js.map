{"version":3,"file":"checkbox.stories-5b1369af.js","sources":["../../src/components/checkbox/checkbox.tsx"],"sourcesContent":["import classNames from 'classnames/bind';\nimport {\n  FC,\n  ReactElement,\n  ReactNode,\n  useRef,\n  KeyboardEventHandler,\n  ChangeEventHandler,\n  HTMLAttributes,\n} from 'react';\nimport { KeyCodes } from '@common/constants/keyCodes';\nimport styles from './checkbox.module.scss';\n\nconst cx = classNames.bind(styles);\n\ninterface CheckboxProps extends HTMLAttributes<HTMLInputElement> {\n  value: boolean;\n  children?: ReactNode;\n  disabled?: boolean;\n  className?: string;\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n}\n\n// DS link - https://www.figma.com/file/gjYQPbeyf4YsH3wZiVKoaj/%F0%9F%9B%A0-RP-DS-6?type=design&node-id=2350-8764&mode=design&t=GAXsAg9jOEgkVVlq-0\nexport const Checkbox: FC<CheckboxProps> = ({\n  children,\n  disabled = false,\n  onChange,\n  className,\n  value,\n  ...rest\n}): ReactElement => {\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const handleKeyDown: KeyboardEventHandler<HTMLInputElement> = (event) => {\n    const { keyCode } = event;\n\n    if (keyCode === KeyCodes.SPACE_KEY_CODE) {\n      event.preventDefault();\n      inputRef.current?.click();\n      return;\n    }\n\n    if (keyCode === KeyCodes.ENTER_KEY_CODE) {\n      event.preventDefault();\n      inputRef.current?.click();\n    }\n  };\n\n  return (\n    <label\n      id=\"rp-ui-kit-checkbox-label\"\n      className={cx('checkbox', className, {\n        disabled,\n      })}\n    >\n      <input\n        ref={inputRef}\n        tabIndex={0}\n        type=\"checkbox\"\n        onKeyDown={handleKeyDown}\n        className={cx('input')}\n        disabled={disabled}\n        onChange={onChange}\n        checked={value}\n        {...rest}\n      />\n      <span\n        aria-labelledby=\"rp-ui-kit-checkbox-label\"\n        role=\"checkbox\"\n        aria-checked={value}\n        className={cx('control', {\n          disabled,\n        })}\n      />\n      {children && <span className={cx('children', { disabled })}>{children}</span>}\n    </label>\n  );\n};\n"],"names":["cx","classNames","styles","Checkbox","children","disabled","onChange","className","value","rest","inputRef","useRef","handleKeyDown","event","keyCode","KeyCodes","_a","_b","jsxs","jsx"],"mappings":"mYAaAA,EAAAC,EAAA,KAAAC,CAAA,EAWOC,EAAA,CAAA,CAAqC,SAAAC,EAC1C,SAAAC,EAAA,GACW,SAAAC,EACX,UAAAC,EACA,MAAAC,EACA,GAAAC,CAEF,IAAA,CACE,MAAAC,EAAAC,SAAA,IAAA,EAEAC,EAAAC,GAAA,SACE,KAAA,CAAA,QAAAC,CAAA,EAAAD,EAEA,GAAAC,IAAAC,EAAA,eAAA,CACEF,EAAA,eAAA,GACAG,EAAAN,EAAA,UAAA,MAAAM,EAAA,QACA,MAAA,CAGFF,IAAAC,EAAA,iBACEF,EAAA,eAAA,GACAI,EAAAP,EAAA,UAAA,MAAAO,EAAA,QACF,EAGF,OAAAC,EAAA,KACE,QAAC,CAAA,GAAA,2BACI,UAAAlB,EAAA,WAAAO,EAAA,CACkC,SAAAF,CACnC,CAAA,EACD,SAAA,CAEDc,EAAA,IAAA,QAAC,CAAA,IAAAT,EACM,SAAA,EACK,KAAA,WACL,UAAAE,EACM,UAAAZ,EAAA,OAAA,EACU,SAAAK,EACrB,SAAAC,EACA,QAAAE,EACS,GAAAC,CACL,CAAA,EACNU,EAAA,IACA,OAAC,CAAA,kBAAA,2BACiB,KAAA,WACX,eAAAX,EACS,UAAAR,EAAA,UAAA,CACW,SAAAK,CACvB,CAAA,CACD,CAAA,EACHD,GAAAe,EAAA,IAAA,OAAA,CAAA,UAAAnB,EAAA,WAAA,CAAA,SAAAK,CAAA,CAAA,EAAA,SAAAD,EAAA,CACsE,CAAA,CAAA,CAG5E;;;;;;;;;;;;;;"}