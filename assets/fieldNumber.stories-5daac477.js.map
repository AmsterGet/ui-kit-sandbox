{"version":3,"file":"fieldNumber.stories-5daac477.js","sources":["../../src/components/fieldNumber/constants.ts","../../src/components/fieldNumber/fieldNumber.tsx"],"sourcesContent":["import { KeyCodes } from '@common/constants/keyCodes';\n\nexport const DEFAULT_WIDTH_CH = 5;\nexport const MAX_WIDTH_CH = 16;\n\nexport const ALLOWED_KEY_CODES = [\n  KeyCodes.TAB_KEY_CODE,\n  KeyCodes.BACKSPACE_KEY_CODE,\n  KeyCodes.ARROW_LEFT_KEY_CODE,\n  KeyCodes.ARROW_UP_KEY_CODE,\n  KeyCodes.ARROW_RIGHT_KEY_CODE,\n  KeyCodes.ARROW_DOWN_KEY_CODE,\n  KeyCodes.DELETE_KEY_CODE,\n  KeyCodes.NUM_LOCK_0_KEY_CODE,\n  KeyCodes.NUM_LOCK_1_KEY_CODE,\n  KeyCodes.NUM_LOCK_2_KEY_CODE,\n  KeyCodes.NUM_LOCK_3_KEY_CODE,\n  KeyCodes.NUM_LOCK_4_KEY_CODE,\n  KeyCodes.NUM_LOCK_5_KEY_CODE,\n  KeyCodes.NUM_LOCK_6_KEY_CODE,\n  KeyCodes.NUM_LOCK_7_KEY_CODE,\n  KeyCodes.NUM_LOCK_8_KEY_CODE,\n  KeyCodes.NUM_LOCK_9_KEY_CODE,\n];\n","import {\n  FC,\n  HTMLAttributes,\n  KeyboardEventHandler,\n  MouseEventHandler,\n  ChangeEventHandler,\n  FocusEventHandler,\n  ReactElement,\n  useMemo,\n  useRef,\n} from 'react';\nimport classNames from 'classnames/bind';\nimport { KeyCodes } from '@common/constants/keyCodes';\nimport { BaseIconButton, PlusIcon, MinusIcon } from '@components/icons';\nimport { DEFAULT_WIDTH_CH, ALLOWED_KEY_CODES, MAX_WIDTH_CH } from './constants.js';\nimport styles from './fieldNumber.module.scss';\n\nconst cx = classNames.bind(styles);\n\ntype FieldNumberValue = number | string;\n\ninterface FieldNumberProps extends Omit<HTMLAttributes<HTMLInputElement>, 'onChange' | 'onFocus'> {\n  onChange: (value: number | string) => void;\n  value?: FieldNumberValue;\n  placeholder?: string;\n  disabled?: boolean;\n  label?: string;\n  postfix?: string;\n  min?: number;\n  max?: number;\n  title?: string;\n  error?: string;\n  touched?: boolean;\n  onFocus?: () => void | FocusEventHandler<HTMLInputElement>;\n}\n\nexport const FieldNumber: FC<FieldNumberProps> = ({\n  value = '',\n  placeholder = '0',\n  disabled = false,\n  onChange,\n  onFocus,\n  onBlur,\n  label,\n  postfix = '',\n  min = 0,\n  max = Number.MAX_SAFE_INTEGER,\n  title,\n  error,\n  touched = false,\n  ...rest\n}): ReactElement => {\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n    let newValue: FieldNumberValue = event.target.value.replace(/^0(?=\\d+|^\\d)/g, '');\n    if (newValue === '') {\n      onChange('');\n      return;\n    }\n    newValue = +newValue;\n    if (newValue >= min && newValue <= max) {\n      onChange(newValue);\n    }\n  };\n  const handleKeyDown: KeyboardEventHandler<HTMLInputElement> = (event) => {\n    const { keyCode } = event;\n\n    if (ALLOWED_KEY_CODES.includes(keyCode)) {\n      return;\n    }\n\n    if (\n      keyCode < KeyCodes.NUMBER_START_KEY_CODE ||\n      keyCode > KeyCodes.NUMBER_END_KEY_CODE ||\n      event.shiftKey\n    ) {\n      event.preventDefault();\n    }\n  };\n  const handleDecrease = () => {\n    const newValue = +value - 1;\n    if (newValue >= min && newValue <= max) {\n      onChange(newValue);\n    }\n  };\n  const handleIncrease = () => {\n    const newValue = +value + 1;\n    if (newValue >= min && newValue <= max) {\n      onChange(newValue);\n    }\n  };\n  const placeholderValue = placeholder + postfix;\n  const inputWidth = useMemo(() => {\n    let width = (String(value) || placeholderValue).length;\n    if (postfix && !value) {\n      width += 1;\n    }\n\n    return width > MAX_WIDTH_CH ? `${MAX_WIDTH_CH}ch` : `${width || DEFAULT_WIDTH_CH}ch`;\n  }, [placeholderValue, postfix, value]);\n  const handleInputFieldClick: MouseEventHandler<HTMLDivElement> = () => {\n    if (inputRef && inputRef.current) {\n      inputRef.current.focus();\n    }\n    if (onFocus) {\n      onFocus();\n    }\n  };\n\n  return (\n    <div className={cx('field-number', { disabled })}>\n      {label && <span className={cx('label')}>{label}</span>}\n      <div\n        className={cx('input-container', {\n          filled: !!value || value === 0,\n          error,\n          disabled,\n          touched,\n        })}\n        title={title}\n      >\n        <BaseIconButton\n          className={cx('sign', 'minus')}\n          disabled={disabled}\n          onClick={handleDecrease}\n        >\n          <MinusIcon />\n        </BaseIconButton>\n        <span className={cx('input-field', { disabled })} onClick={handleInputFieldClick}>\n          <input\n            ref={inputRef}\n            className={cx('input')}\n            type=\"number\"\n            value={value}\n            placeholder={placeholderValue}\n            disabled={disabled}\n            min={min}\n            max={max}\n            onKeyDown={disabled ? undefined : handleKeyDown}\n            onChange={disabled ? undefined : handleChange}\n            onFocus={disabled ? undefined : onFocus}\n            style={{ width: inputWidth }}\n            {...rest}\n          />\n          {!!postfix && (value === 0 || !!value) && <span>{postfix.slice(0, 1)}</span>}\n        </span>\n        <BaseIconButton className={cx('sign', 'plus')} disabled={disabled} onClick={handleIncrease}>\n          <PlusIcon />\n        </BaseIconButton>\n      </div>\n    </div>\n  );\n};\n"],"names":["DEFAULT_WIDTH_CH","MAX_WIDTH_CH","ALLOWED_KEY_CODES","KeyCodes","cx","classNames","styles","FieldNumber","value","placeholder","disabled","onChange","onFocus","onBlur","label","postfix","min","max","title","error","touched","rest","inputRef","useRef","handleChange","event","newValue","handleKeyDown","keyCode","handleDecrease","handleIncrease","placeholderValue","inputWidth","useMemo","width","handleInputFieldClick","jsxs","jsx","BaseIconButton","MinusIcon","PlusIcon"],"mappings":"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"}